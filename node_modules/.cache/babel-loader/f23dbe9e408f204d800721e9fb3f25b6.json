{"ast":null,"code":"var _jsxFileName = \"/Users/fulica/Projects/AAD_react/src/components/GlobalCard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GlobalCard(props) {\n  const {\n    places\n  } = props;\n\n  function makeWeightedBlock(val, i) {\n    function evaluateBlockColor(val) {\n      if (typeof val === 'number') {\n        return val === 0 ? 'rgb(100, 0, 0)' : `rgb(0, ${val * 10}, 0)`;\n      }\n\n      return 'rgb(100, 100, 100)';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'block',\n      style: {\n        backgroundColor: evaluateBlockColor(val)\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  } /// take all the years values and the names for horiz - \n  // put years on top\n\n\n  function placesLines() {\n    return places.sort((a, b) => {\n      return a[1].yearsWithAADAmount - b[1].yearsWithAADAmount;\n    }).sort((a, b) => {\n      return a[1].yearsWithDataAmount - b[1].yearsWithDataAmount;\n    }).map((placeArr, i) => {\n      const name = placeArr[0];\n      const place = placeArr[1];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexing globalLine\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-left placesNames\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexing\",\n          children: place.yearsValues.map((val, i) => {\n            return makeWeightedBlock(val, i);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, name + i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"GlobalCard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), placesLines()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = GlobalCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalCard\");","map":{"version":3,"sources":["/Users/fulica/Projects/AAD_react/src/components/GlobalCard.js"],"names":["React","GlobalCard","props","places","makeWeightedBlock","val","i","evaluateBlockColor","backgroundColor","placesLines","sort","a","b","yearsWithAADAmount","yearsWithDataAmount","map","placeArr","name","place","yearsValues"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;;AAEA,WAASE,iBAAT,CAA2BC,GAA3B,EAAgCC,CAAhC,EAAmC;AACjC,aAASC,kBAAT,CAA4BF,GAA5B,EAAiC;AAC/B,UAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,eAAOA,GAAG,KAAK,CAAR,GAAY,gBAAZ,GAAgC,UAASA,GAAG,GAAG,EAAG,MAAzD;AACD;;AACD,aAAO,oBAAP;AACD;;AACD,wBAAO;AAAK,MAAA,SAAS,EAAE,OAAhB;AAAiC,MAAA,KAAK,EAAE;AAAEG,QAAAA,eAAe,EAAGD,kBAAkB,CAACF,GAAD;AAAtC;AAAxC,OAA8BC,CAA9B;AAAA;AAAA;AAAA;AAAA,YAAP;AAED,GAZuC,CAaxC;AACA;;;AACA,WAASG,WAAT,GAAuB;AACrB,WAAQN,MAAM,CAACO,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAC,aAAOD,CAAC,CAAC,CAAD,CAAD,CAAKE,kBAAL,GAA0BD,CAAC,CAAC,CAAD,CAAD,CAAKC,kBAAtC;AAAyD,KAAhF,EAAkFH,IAAlF,CAAuF,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAC,aAAOD,CAAC,CAAC,CAAD,CAAD,CAAKG,mBAAL,GAA2BF,CAAC,CAAC,CAAD,CAAD,CAAKE,mBAAvC;AAA2D,KAA7J,EAA+JC,GAA/J,CAAmK,CAACC,QAAD,EAAWV,CAAX,KAAiB;AAC1L,YAAMW,IAAI,GAAGD,QAAQ,CAAC,CAAD,CAArB;AACA,YAAME,KAAK,GAAGF,QAAQ,CAAC,CAAD,CAAtB;AACA,0BACE;AAAoB,QAAA,SAAS,EAAC,oBAA9B;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsCC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oBAEGC,KAAK,CAACC,WAAN,CAAkBJ,GAAlB,CAAsB,CAACV,GAAD,EAAMC,CAAN,KAAY;AACjC,mBAAOF,iBAAiB,CAACC,GAAD,EAAMC,CAAN,CAAxB;AACD,WAFA;AAFH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUW,IAAI,GAAGX,CAAjB;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAbO,CAAR;AAeD;;AACD,sBACE;AAAA,4BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,EAAuBG,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;KAnCuBR,U","sourcesContent":["import React from 'react'\n\nexport default function GlobalCard(props) {\n  const { places } = props\n\n  function makeWeightedBlock(val, i) {\n    function evaluateBlockColor(val) {\n      if (typeof val === 'number') {\n        return val === 0 ? 'rgb(100, 0, 0)' : `rgb(0, ${val * 10}, 0)`\n      }\n      return 'rgb(100, 100, 100)'\n    }\n    return <div className={'block'} key={i} style={{ backgroundColor: (evaluateBlockColor(val)) }}></div>\n\n  }\n  /// take all the years values and the names for horiz - \n  // put years on top\n  function placesLines() {\n    return (places.sort((a, b) => {return a[1].yearsWithAADAmount - b[1].yearsWithAADAmount}).sort((a, b) => {return a[1].yearsWithDataAmount - b[1].yearsWithDataAmount}).map((placeArr, i) => {\n      const name = placeArr[0]\n      const place = placeArr[1]\n      return (\n        <div key={name + i} className='flexing globalLine'>\n          <p className='text-left placesNames'>{name}</p>\n          <div className='flexing'>\n\n            {place.yearsValues.map((val, i) => {\n              return makeWeightedBlock(val, i)\n            })}\n          </div>\n        </div>)\n    }))\n\n  }\n  return (\n    <div><p>GlobalCard</p>{placesLines()}</div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}