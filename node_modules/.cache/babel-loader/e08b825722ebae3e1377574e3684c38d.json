{"ast":null,"code":"var _jsxFileName = \"/Users/fulica/Projects/AAD_react/src/components/Chart.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction pickColor(value) {\n  if (typeof value !== 'number') return 'hsl(0, 0%, 50%)';\n  if (value === 0) return 'hsl(0, 50%, 50% )';\n  return `hsl(${70}, ${30 + value * 2.1}%, ${20 + value * 4.1}%)`;\n}\n\nexport default function Chart(props) {\n  const {\n    data\n  } = props;\n  const dataArr = [...data];\n\n  const gridColumns = () => {\n    return dataArr[0][1].yearsValues.map((el, i) => i === 0 ? '4fr' : '3rem ').join('') + '1fr';\n  };\n\n  const gridRows = () => {\n    return dataArr.map((el, i) => '3rem ').join('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chartContainer\",\n    style: {\n      gridTemplateRows: gridRows(),\n      gridTemplateColumns: gridColumns()\n    },\n    children: [dataArr.map((place, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridColumn: 1,\n          gridRow: i\n        },\n        className: \"placeName\",\n        children: place[0]\n      }, i + place[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this);\n    }), dataArr.map((place, i) => {\n      const yearsValues = place[1].yearsValues;\n      return yearsValues.map((value, j) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: pickColor(value),\n            gridColumn: 2 + j,\n            gridRow: i\n          },\n          className: \"placeArea\",\n          children: value\n        }, `${i}${j}${value}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      });\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/fulica/Projects/AAD_react/src/components/Chart.js"],"names":["React","pickColor","value","Chart","props","data","dataArr","gridColumns","yearsValues","map","el","i","join","gridRows","gridTemplateRows","gridTemplateColumns","place","gridColumn","gridRow","j","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B,OAAO,iBAAP;AAC/B,MAAIA,KAAK,KAAK,CAAd,EAAkB,OAAO,mBAAP;AAClB,SAAQ,OAAM,EAAG,KAAI,KAAKA,KAAK,GAAG,GAAI,MAAK,KAAKA,KAAK,GAAG,GAAI,IAA5D;AACH;;AACD,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAME,OAAO,GAAG,CAAC,GAAGD,IAAJ,CAAhB;;AAEA,QAAME,WAAW,GAAG,MAAM;AACtB,WAAOD,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,EAAcE,WAAd,CAA0BC,GAA1B,CAA8B,CAACC,EAAD,EAAKC,CAAL,KAAWA,CAAC,KAAK,CAAN,GAAU,KAAV,GAAkB,OAA3D,EAAoEC,IAApE,CAAyE,EAAzE,IAA+E,KAAtF;AACH,GAFD;;AAGA,QAAMC,QAAQ,GAAG,MAAM;AACnB,WAAOP,OAAO,CAACG,GAAR,CAAY,CAACC,EAAD,EAAKC,CAAL,KAAW,OAAvB,EAAgCC,IAAhC,CAAqC,EAArC,CAAP;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AAAEE,MAAAA,gBAAgB,EAAED,QAAQ,EAA5B;AAAgCE,MAAAA,mBAAmB,EAAER,WAAW;AAAhE,KAAvC;AAAA,eACKD,OAAO,CAACG,GAAR,CAAY,CAACO,KAAD,EAAQL,CAAR,KAAc;AACvB,0BACI;AAEI,QAAA,KAAK,EAAE;AACHM,UAAAA,UAAU,EAAE,CADT;AAEHC,UAAAA,OAAO,EAAEP;AAFN,SAFX;AAOI,QAAA,SAAS,EAAC,WAPd;AAAA,kBASKK,KAAK,CAAC,CAAD;AATV,SACSL,CAAC,GAAGK,KAAK,CAAC,CAAD,CADlB;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KAhBA,CADL,EAmBKV,OAAO,CAACG,GAAR,CAAY,CAACO,KAAD,EAAQL,CAAR,KAAc;AACvB,YAAMH,WAAW,GAAGQ,KAAK,CAAC,CAAD,CAAL,CAASR,WAA7B;AACA,aAAOA,WAAW,CAACC,GAAZ,CAAgB,CAACP,KAAD,EAAQiB,CAAR,KAAc;AACjC,4BACI;AAEI,UAAA,KAAK,EAAE;AACHC,YAAAA,eAAe,EAAEnB,SAAS,CAACC,KAAD,CADvB;AAEHe,YAAAA,UAAU,EAAG,IAAIE,CAFd;AAGHD,YAAAA,OAAO,EAAEP;AAHN,WAFX;AAQI,UAAA,SAAS,EAAC,WARd;AAAA,oBAUKT;AAVL,WACU,GAAES,CAAE,GAAEQ,CAAE,GAAEjB,KAAM,EAD1B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcH,OAfM,CAAP;AAiBH,KAnBA,CAnBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;KArDuBC,K","sourcesContent":["import React from 'react'\nfunction pickColor(value){\n    if (typeof value !== 'number') return 'hsl(0, 0%, 50%)'\n    if (value === 0 ) return 'hsl(0, 50%, 50% )' \n    return `hsl(${70}, ${30 + value * 2.1}%, ${20 + value * 4.1}%)`\n}\nexport default function Chart(props) {\n    const { data } = props;\n    const dataArr = [...data]\n\n    const gridColumns = () => {\n        return dataArr[0][1].yearsValues.map((el, i) => i === 0 ? '4fr' : '3rem ').join('') + '1fr'\n    }\n    const gridRows = () => {\n        return dataArr.map((el, i) => '3rem ').join('')\n    }\n\n    return (\n        <div className='chartContainer' style={{ gridTemplateRows: gridRows(), gridTemplateColumns: gridColumns() }}>\n            {dataArr.map((place, i) => {\n                return (\n                    <div\n                        key={i + place[0]}\n                        style={{\n                            gridColumn: 1,\n                            gridRow: i,\n\n                        }}\n                        className='placeName'\n                    >\n                        {place[0]}\n                    </div>\n                )\n\n\n            })}\n\n            {dataArr.map((place, i) => {\n                const yearsValues = place[1].yearsValues;\n                return yearsValues.map((value, j) => {\n                    return (\n                        <div\n                            key={`${i}${j}${value}`}\n                            style={{\n                                backgroundColor: pickColor(value),\n                                gridColumn: (2 + j),\n                                gridRow: i,\n                                \n                            }}\n                            className='placeArea'\n                        >\n                            {value}\n                        </div>\n                    )\n                }\n                )\n            })}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}